---
- name: Install dependencies
  apt:
    name:
      - debian-keyring
      - debian-archive-keyring
      - apt-transport-https
      - python3-passlib
    state: present
    update_cache: yes

- name: Add Caddy GPG key
  apt_key:
    url: https://dl.cloudsmith.io/public/caddy/stable/gpg.key
    state: present

- name: Add Caddy repository
  apt_repository:
    repo: "deb https://dl.cloudsmith.io/public/caddy/stable/deb/debian any-version main"
    state: present
    filename: caddy-stable

- name: Install Caddy
  apt:
    name: caddy
    state: present
    update_cache: yes

- name: Create Caddy directories
  file:
    path: "{{ item }}"
    state: directory
    owner: caddy
    group: caddy
    mode: '0755'
  loop:
    - /etc/caddy/sites
    - /var/log/caddy

- name: Configure Caddy
  template:
    src: Caddyfile.j2
    dest: /etc/caddy/Caddyfile
    owner: caddy
    group: caddy
    mode: '0644'
  notify: reload caddy

- name: Configure site-specific Caddy file
  template:
    src: remember-me.caddy.j2
    dest: /etc/caddy/sites/remember-me.caddy
    owner: caddy
    group: caddy
    mode: '0644'
  notify: reload caddy

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes

- name: Check if Caddy service is already running
  shell: systemctl is-active caddy
  register: caddy_active
  changed_when: false
  failed_when: false

- name: Start Caddy if not running
  systemd:
    name: caddy
    state: started
  when: caddy_active.stdout != "active"
  register: caddy_start_result
  failed_when: false

- name: Enable Caddy service
  systemd:
    name: caddy
    enabled: yes
  async: 30
  poll: 5

- name: Debug Caddy start issues
  debug:
    msg: |
      Caddy start result: {{ caddy_start_result }}
  when: caddy_start_result.failed | default(false)

- name: Get Caddy service status if start failed
  shell: |
    systemctl status caddy --no-pager -l
    journalctl -u caddy -n 50 --no-pager
  register: caddy_debug_info
  when: caddy_start_result.failed | default(false)

- name: Show Caddy debug info
  debug:
    msg: "{{ caddy_debug_info.stdout_lines }}"
  when: caddy_debug_info is defined

- name: Fail if Caddy couldn't start
  fail:
    msg: "Failed to start Caddy service. Check the debug output above."
  when: caddy_start_result.failed | default(false)